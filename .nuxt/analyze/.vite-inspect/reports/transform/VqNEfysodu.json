{
  "resolvedId": "C:/Users/HP/Desktop/projets/next/000/update/coumbassa_sanden/node_modules/quasar/src/utils/private/click-outside.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { listenOpts } from '../event.js'\nimport { portalProxyList } from '../private/portal.js'\n\nlet timer = null\n\nconst\n  { notPassiveCapture } = listenOpts,\n  registeredList = []\n\nfunction globalHandler (evt) {\n  if (timer !== null) {\n    clearTimeout(timer)\n    timer = null\n  }\n\n  const target = evt.target\n\n  if (\n    target === void 0\n    || target.nodeType === 8\n    || target.classList.contains('no-pointer-events') === true\n  ) {\n    return\n  }\n\n  // check last portal vm if it's\n  // a QDialog and not in seamless mode\n  let portalIndex = portalProxyList.length - 1\n\n  while (portalIndex >= 0) {\n    const proxy = portalProxyList[ portalIndex ].$\n\n    // skip QTooltip portals\n    if (proxy.type.name === 'QTooltip') {\n      portalIndex--\n      continue\n    }\n\n    if (proxy.type.name !== 'QDialog') {\n      break\n    }\n\n    if (proxy.props.seamless !== true) {\n      return\n    }\n\n    portalIndex--\n  }\n\n  for (let i = registeredList.length - 1; i >= 0; i--) {\n    const state = registeredList[ i ]\n\n    if (\n      (\n        state.anchorEl.value === null\n        || state.anchorEl.value.contains(target) === false\n      )\n      && (\n        target === document.body\n        || (\n          state.innerRef.value !== null\n          && state.innerRef.value.contains(target) === false\n        )\n      )\n    ) {\n      // mark the event as being processed by clickOutside\n      // used to prevent refocus after menu close\n      evt.qClickOutside = true\n      state.onClickOutside(evt)\n    }\n    else {\n      return\n    }\n  }\n}\n\nexport function addClickOutside (clickOutsideProps) {\n  registeredList.push(clickOutsideProps)\n\n  if (registeredList.length === 1) {\n    document.addEventListener('mousedown', globalHandler, notPassiveCapture)\n    document.addEventListener('touchstart', globalHandler, notPassiveCapture)\n  }\n}\n\nexport function removeClickOutside (clickOutsideProps) {\n  const index = registeredList.findIndex(h => h === clickOutsideProps)\n\n  if (index > -1) {\n    registeredList.splice(index, 1)\n\n    if (registeredList.length === 0) {\n      if (timer !== null) {\n        clearTimeout(timer)\n        timer = null\n      }\n\n      document.removeEventListener('mousedown', globalHandler, notPassiveCapture)\n      document.removeEventListener('touchstart', globalHandler, notPassiveCapture)\n    }\n  }\n}\n",
      "start": 1709123933503,
      "end": 1709123935313,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709123935314,
      "end": 1709123935314,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709123935315,
      "end": 1709123935315,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709123935316,
      "end": 1709123935316,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709123935316,
      "end": 1709123935317,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709123935317,
      "end": 1709123935317,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709123935317,
      "end": 1709123935317,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709123935317,
      "end": 1709123935317,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709123935317,
      "end": 1709123935317,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709123935317,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709123935318,
      "end": 1709123935318,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709123935318,
      "end": 1709123935334,
      "order": "normal"
    }
  ]
}
