{
  "resolvedId": "C:/Users/HP/Desktop/projets/next/000/update/coumbassa_sanden/node_modules/@nuxtjs/strapi/dist/runtime/composables/useStrapiClient.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { stringify } from \"qs\";\nimport { useStrapiUrl } from \"./useStrapiUrl.mjs\";\nimport { useStrapiVersion } from \"./useStrapiVersion.mjs\";\nimport { useStrapiToken } from \"./useStrapiToken.mjs\";\nimport { useNuxtApp } from \"#imports\";\nconst defaultErrors = (err) => ({\n  v4: {\n    error: {\n      status: 500,\n      name: \"UnknownError\",\n      message: err.message,\n      details: err\n    }\n  },\n  v3: {\n    error: \"UnknownError\",\n    message: err.message,\n    statusCode: 500\n  }\n});\nexport const useStrapiClient = () => {\n  const nuxt = useNuxtApp();\n  const baseURL = useStrapiUrl();\n  const version = useStrapiVersion();\n  const token = useStrapiToken();\n  return async (url, fetchOptions = {}) => {\n    const headers = {};\n    if (token && token.value) {\n      headers.Authorization = `Bearer ${token.value}`;\n    }\n    if (fetchOptions.params) {\n      const params = stringify(fetchOptions.params, { encodeValuesOnly: true });\n      if (params) {\n        url = `${url}?${params}`;\n      }\n      delete fetchOptions.params;\n    }\n    try {\n      return await $fetch(url, {\n        retry: 0,\n        baseURL,\n        ...fetchOptions,\n        headers: {\n          ...headers,\n          ...fetchOptions.headers\n        }\n      });\n    } catch (err) {\n      const e = err.data || defaultErrors(err)[version];\n      nuxt.hooks.callHook(\"strapi:error\", e);\n      throw e;\n    }\n  };\n};\n",
      "start": 1709123919059,
      "end": 1709123923050,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709123923050,
      "end": 1709123923050,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709123923050,
      "end": 1709123923050,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709123923050,
      "end": 1709123923050,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709123923050,
      "end": 1709123923050,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709123923050,
      "end": 1709123923050,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709123923051,
      "end": 1709123923051,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709123923051,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709123923052,
      "end": 1709123923052,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709123923052,
      "end": 1709123923053,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709123923053,
      "end": 1709123923053,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709123923053,
      "end": 1709123923053,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useNuxtApp } from '#app/nuxt';\nimport { stringify } from \"qs\";\nimport { useStrapiUrl } from \"./useStrapiUrl.mjs\";\nimport { useStrapiVersion } from \"./useStrapiVersion.mjs\";\nimport { useStrapiToken } from \"./useStrapiToken.mjs\";\nconst defaultErrors = (err) => ({\n  v4: {\n    error: {\n      status: 500,\n      name: \"UnknownError\",\n      message: err.message,\n      details: err\n    }\n  },\n  v3: {\n    error: \"UnknownError\",\n    message: err.message,\n    statusCode: 500\n  }\n});\nexport const useStrapiClient = () => {\n  const nuxt = useNuxtApp();\n  const baseURL = useStrapiUrl();\n  const version = useStrapiVersion();\n  const token = useStrapiToken();\n  return async (url, fetchOptions = {}) => {\n    const headers = {};\n    if (token && token.value) {\n      headers.Authorization = `Bearer ${token.value}`;\n    }\n    if (fetchOptions.params) {\n      const params = stringify(fetchOptions.params, { encodeValuesOnly: true });\n      if (params) {\n        url = `${url}?${params}`;\n      }\n      delete fetchOptions.params;\n    }\n    try {\n      return await $fetch(url, {\n        retry: 0,\n        baseURL,\n        ...fetchOptions,\n        headers: {\n          ...headers,\n          ...fetchOptions.headers\n        }\n      });\n    } catch (err) {\n      const e = err.data || defaultErrors(err)[version];\n      nuxt.hooks.callHook(\"strapi:error\", e);\n      throw e;\n    }\n  };\n};\n",
      "start": 1709123923053,
      "end": 1709123923056,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACltD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACthF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709123923056,
      "end": 1709123923056,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709123923057,
      "end": 1709123923057,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709123923058,
      "end": 1709123923390,
      "order": "normal"
    }
  ]
}
