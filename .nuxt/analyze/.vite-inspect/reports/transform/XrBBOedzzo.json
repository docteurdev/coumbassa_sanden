{
  "resolvedId": "C:/Users/HP/Desktop/projets/next/000/update/coumbassa_sanden/node_modules/uuid/dist/esm-browser/rng.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}",
      "start": 1709123951749,
      "end": 1709123952045,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709123952045,
      "end": 1709123952045,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709123952045,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709123952046,
      "end": 1709123952046,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709123952046,
      "end": 1709123952047,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "quasar:directive",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709123952047,
      "end": 1709123952047,
      "order": "normal"
    }
  ]
}
